AWSTemplateFormatVersion: '2010-09-09' #version of the template
Transform: AWS::Serverless-2016-10-31
Description: PDF to Text API

Resources:
  PdfToTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: extract_cv/ #fucntion
      Handler: app.lambda_handler
      Runtime: python3.12
      MemorySize: 128
      Timeout: 10
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /pdf-to-text
            Method: POST
            RestApiId: !Ref ApiGatewayApi

  # New Function to Upload CV to S3
  UploadCvToS3Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: upload_cv/ #fucntion directory
      Handler: app.lambda_handler
      Runtime: python3.12
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref CvBucket
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3WritePolicy:
            BucketName: !Ref CvBucket
      Events:
        UploadCvEvent:
          Type: Api
          Properties:
            Path: /upload-cv
            Method: POST
            RestApiId: !Ref ApiGatewayApi
            RequestTemplates:
              multipart/form-data: |
                {
                  "body": "$input.body",
                  "isBase64Encoded": true,
                  "headers": {
                    "Content-Type": "$input.params('header').get('Content-Type')"
                  }
                }

  # S3 Bucket to Store CVs
  CvBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "cv-bucket-${AWS::AccountId}-${AWS::Region}"  # Unique bucket name
      AccessControl: Private  # Ensure the bucket is private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      BinaryMediaTypes:
        - application/pdf # binary media type
        - multipart/form-data
      Cors:  # Explicitly disable CORS by not allowing any origins
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"  # Correct key for allowing all origins
        AllowCredentials: "'true'"

Outputs:
  PdfToTextApi:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/pdf-to-text/"
  UploadCvApi:
    Description: "API Gateway endpoint URL for uploading CVs"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/upload-cv/"
  CvBucketName:
    Description: "Name of the S3 bucket for storing CVs"
    Value: !Ref CvBucket